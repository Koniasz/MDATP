// https://security.microsoft.com/threatanalytics3/4ef1fbc5-5659-4d9b-b32e-97a694475955/overview
// HAFNIUM - Exchange

// Query 1
// Find exchange servers that run umworkerprocess.exe and then lookup the 
// exchange version information, release date and build name

let exchangeserverioninfo = (externaldata (ProductName:string, ReleaseDate:string, Build_short:string, Build_long:string)
[@"https://raw.githubusercontent.com/alexverboon/MDATP/master/AdvancedHunting/Exchange/exchnage_versions.csv"]
with(format="csv",ignoreFirstRecord=true))
| where ProductName !startswith "#"
| project ProductName,ReleaseDate, Build_long, Build_short;
// exchangeserverioninfo
// Identify Exchange servers with umworkerprocess.exe
DeviceProcessEvents
| where FileName contains "umworkerprocess.exe"
| where FolderPath  contains @"\Exchange\Bin\"
| distinct DeviceName,tostring(ProcessVersionInfoProductName), ProcessVersionInfoProductVersion, FolderPath
| join kind=leftouter  exchangeserverioninfo
on $left.ProcessVersionInfoProductVersion == $right. Build_long

// Query 2
// Find Exchange servers using Defender for Endpoint Threat and vulnerability inventory data

let exchangeserverioninfo = (externaldata (ProductName:string, ReleaseDate:string, Build_short:string, Build_long:string)
[@"https://raw.githubusercontent.com/alexverboon/MDATP/master/AdvancedHunting/Exchange/exchnage_versions.csv"]
with(format="csv",ignoreFirstRecord=true))
| where ProductName !startswith "#"
| project ProductName,ReleaseDate, Build_long, Build_short;
// Identify Exchange servers based on TVM inventory data
DeviceTvmSoftwareInventory 
| where SoftwareVendor contains "Microsoft"
| where SoftwareName contains "Exchange"
| join kind=leftouter  exchangeserverioninfo
on $left.SoftwareVersion == $right. Build_short
| project DeviceName, OSPlatform, OSVersion, OSArchitecture, SoftwareName, SoftwareVersion, ProductName, ReleaseDate, Build_short





not very precise but can help when you have unidentified versions. 

let pattern = @"^(.*)(\.\d+)$";
let exchangeserverioninfo = (externaldata (ProductName:string, ReleaseDate:string, Build_short:string, Build_long:string)
[@"https://raw.githubusercontent.com/alexverboon/MDATP/master/AdvancedHunting/Exchange/exchnage_versions.csv"]
with(format="csv",ignoreFirstRecord=true))
| where ProductName !startswith "#"
| extend Build_long_main =  extract(pattern,1, Build_long)
| project ProductName,ReleaseDate, Build_long, Build_long_main,Build_short;
DeviceProcessEvents
| where FolderPath contains "Exchange Server"
| extend ProcessVersionInfoProductVersion_main =  extract(pattern,1,ProcessVersionInfoProductVersion)
| distinct DeviceName, FileName, FolderPath, ProcessVersionInfoProductVersion, ProcessVersionInfoProductVersion_main
| join kind=leftouter  exchangeserverioninfo
on $left.ProcessVersionInfoProductVersion_main  == $right.Build_long_main
| project DeviceName, FileName, ProcessVersionInfoProductVersion, Build_long, Build_short, ProductName, ReleaseDate